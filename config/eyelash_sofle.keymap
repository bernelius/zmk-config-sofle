#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&mmv {
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_enter {
            timeout-ms = <30>;
            key-positions = <34 35>;
            bindings = <&kp ENTER>;
        };
        compatible = "zmk,combos";
        combo_inside_parens {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&parens_inside>;
        };
        compatible = "zmk,combos";
        combo_inside_brackets {
            timeout-ms = <30>;
            key-positions = <29 30>;
            bindings = <&brackets_inside>;
        };
        compatible = "zmk,combos";
        combo_inside_braces {
            timeout-ms = <30>;
            key-positions = <42 43>;
            bindings = <&braces_inside>;
        };
        compatible = "zmk,combos";
        combo_inside_tags {
            timeout-ms = <30>;
            key-positions = <47 48>;
            bindings = <&tags_inside>;
        };
    };
    behaviors {
        excl_one: exclamation_one {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION>, <&kp N1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at_two: at_two {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp N2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hash_three: hash_three {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp HASH>, <&kp N3>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dollar_four: dollar_four {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp N4>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        percent_five: percent_five {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PERCENT>, <&kp N5>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        caret_six: caret_six {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp CARET>, <&kp N6>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        amper_seven: ampersand_seven {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AMPERSAND>, <&kp N7>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        aster_eight: asterisk_eight {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ASTERISK>, <&kp N8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbkt_nine: left_bracket_nine {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp N9>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rbkt_zero: right_bracket_zero {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp N0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        tilde_grave: tilde_grave {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp TILDE>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lpar_rpar: leftparenthesis_rightparenthesis {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbkt_rbkt: leftbracket_rightbracket {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbrc_rbrc: leftbrace_rightbrace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
    macros {
        parens_inside: parens_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LPAR &kp RPAR &kp LEFT_ARROW>;
        };
        brackets_inside: brackets_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBKT &kp RBKT &kp LEFT_ARROW>;
        };
        braces_inside: braces_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBRC &kp RBRC &kp LEFT_ARROW>;
        };
        tags_inside: tags_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LESS_THAN &kp GREATER_THAN &kp LEFT_ARROW>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&tilde_grave     &excl_one    &at_two        &hash_three      &dollar_four     &percent_five    &rgb_ug RGB_BRI   &caret_six   &amper_seven   &aster_eight   &lbkt_nine    &rbkt_zero   &kp MINUS
&kp TAB          &kp Q        &kp W          &kp F            &kp P            &kp B            &rgb_ug RGB_BRD   &kp J        &kp L          &kp U          &kp Y         &kp SEMI     &kp BSLH
&mt LCTRL ESC    &kp A        &kp R          &kp S            &lt 3 T          &kp G            &rgb_ug RGB_HUD   &kp M        &lt 3 N        &kp E          &kp I         &kp O        &kp APOS
&kp LSHFT        &kp Z        &kp X          &kp C            &kp D            &kp V            &rgb_ug RGB_HUI   &kp K        &kp H          &kp COMMA      &kp DOT       &kp FSLH     &mo 3
&trans           &to 3        &trans         &kp LEFT_ALT     &kp LEFT_GUI     &mt LSHFT SPACE  &to 2             &lt 1 SPACE  &kp BACKSPACE  &kp DELETE     &trans        &trans
                 >;

            display-name = "floor";
        };

        layer_1 {
            bindings = <
&trans      &trans        &trans          &trans          &trans          &trans      &mmv MOVE_UP     &trans           &trans       &trans         &trans        &trans       &trans
&trans      &trans        &trans          &kp UP_ARROW    &trans          &trans      &mmv MOVE_DOWN   &kp N7           &kp N8       &kp N9         &trans        &trans       &trans
&trans      &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW &trans      &mmv MOVE_LEFT   &kp N4           &kp N5       &kp N6         &kp MINUS     &trans       &trans
&trans      &trans        &trans          &trans          &trans          &trans      &mmv MOVE_RIGHT  &kp N1           &kp N2       &kp N3         &kp PLUS      &trans       &trans
&trans      &trans        &trans          &trans          &trans          &trans      &mkp LCLK        &trans           &kp N0       &kp BACKSPACE  &trans        &trans
            >;

            display-name = "numpad";
        };

        layer_2 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &trans       &mmv MOVE_UP     &trans            &trans            &trans              &trans              &trans      &bt BT_CLR_ALL
&trans        &trans          &trans          &trans        &trans          &trans       &mmv MOVE_DOWN   &rgb_ug RGB_EFF   &trans            &trans              &trans              &trans      &trans
&trans        &out OUT_USB    &out OUT_BLE    &trans        &trans          &trans       &mmv MOVE_LEFT   &rgb_ug RGB_HUI   &rgb_ug RGB_SAI   &rgb_ug RGB_BRI     &rgb_ug RGB_SPI     &trans      &trans
&trans        &trans          &trans          &trans        &trans          &trans       &mmv MOVE_RIGHT  &rgb_ug RGB_HUD   &rgb_ug RGB_SAD   &rgb_ug RGB_BRD     &rgb_ug RGB_SPD     &trans      &trans
&trans        &to 0           &trans          &trans        &trans          &trans       &to 0            &rgb_ug RGB_TOG   &trans            &trans              &trans              &trans
            >;

            display-name = "BLE/RGB";
        };

        layer_3 {
            bindings = <
&trans     &kp F1       &kp F2      &kp F3        &kp F4        &kp F5            &mmv MOVE_UP     &kp F6     &kp F7         &kp F8         &kp F9            &kp F10    &kp F11 
&trans     &trans       &trans      &kp LPAR      &kp RPAR      &trans            &mmv MOVE_DOWN   &kp EQUAL  &kp HOME       &kp UP_ARROW   &kp PAGE_UP       &kp MINUS  &kp F12
&trans     &trans       &trans      &kp LBKT      &kp RBKT      &kp DOUBLE_QUOTES &mmv MOVE_LEFT   &kp MINUS  &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW   &kp PLUS   &trans
&trans     &trans       &trans      &kp LBRC      &kp RBRC      &kp APOS          &mmv MOVE_RIGHT  &trans     &kp END        &kp INSERT     &kp PAGE_DOWN     &kp ENTER  &trans
&trans     &to 0        &trans      &trans        &trans        &trans            &mkp LCLK        &trans     &trans         &trans         &trans            &trans
            >;

            display-name = "fn";
        };

        layer_4 {
            bindings = <
&trans      &trans        &trans       &trans       &trans       &trans      &mmv MOVE_UP     &trans           &trans       &trans      &trans     &trans        &trans
&trans      &trans        &trans       &trans       &trans       &trans      &mmv MOVE_DOWN   &trans           &trans       &trans      &trans     &trans        &trans
&trans      &trans        &trans       &trans       &trans       &trans      &mmv MOVE_LEFT   &trans           &trans       &trans      &trans     &trans        &trans
&trans      &trans        &trans       &trans       &trans       &trans      &mmv MOVE_RIGHT  &trans           &trans       &trans      &trans     &trans        &trans
&trans      &trans        &trans       &trans       &trans       &trans      &mkp LCLK        &trans           &trans       &trans      &trans     &trans
            >;

            display-name = "clear";
        };
    };
};
